AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS-Native Centralized Delivery Platform - AppSync + DynamoDB'

Parameters:
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues: ['dev', 'staging', 'prod']

Resources:
  # DynamoDB Tables for Delivery Platform
  OrdersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${Environment}-delivery-orders'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: orderId
          AttributeType: S
        - AttributeName: customerId
          AttributeType: S
        - AttributeName: driverId
          AttributeType: S
        - AttributeName: merchantId
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
      KeySchema:
        - AttributeName: orderId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: CustomerIndex
          KeySchema:
            - AttributeName: customerId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: DriverIndex
          KeySchema:
            - AttributeName: driverId
              KeyType: HASH
            - AttributeName: status
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: MerchantIndex
          KeySchema:
            - AttributeName: merchantId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  DriversTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${Environment}-delivery-drivers'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: driverId
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: zone
          AttributeType: S
      KeySchema:
        - AttributeName: driverId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: StatusZoneIndex
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: zone
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  MerchantsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${Environment}-delivery-merchants'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: merchantId
          AttributeType: S
        - AttributeName: zone
          AttributeType: S
        - AttributeName: category
          AttributeType: S
      KeySchema:
        - AttributeName: merchantId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: ZoneCategoryIndex
          KeySchema:
            - AttributeName: zone
              KeyType: HASH
            - AttributeName: category
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  CustomersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${Environment}-delivery-customers'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: customerId
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: customerId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: EmailIndex
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  # AppSync GraphQL API
  DeliveryGraphQLAPI:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub '${Environment}-delivery-platform-api'
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      UserPoolConfig:
        UserPoolId: !Ref DeliveryUserPool
        AwsRegion: !Ref AWS::Region
        DefaultAction: ALLOW
      AdditionalAuthenticationProviders:
        - AuthenticationType: API_KEY
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt AppSyncServiceRole.Arn
        FieldLogLevel: ALL

  # API Key for development
  DeliveryAPIKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt DeliveryGraphQLAPI.ApiId
      Description: 'Development API Key'
      Expires: !Ref 'AWS::NoValue'

  # Cognito User Pool
  DeliveryUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub '${Environment}-delivery-users'
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
      Schema:
        - Name: email
          Required: true
          Mutable: false
        - Name: family_name
          Required: true
          Mutable: true
        - Name: given_name
          Required: true
          Mutable: true
        - Name: phone_number
          Required: false
          Mutable: true
        - Name: user_type
          AttributeDataType: String
          Required: false
          Mutable: true

  DeliveryUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref DeliveryUserPool
      ClientName: !Sub '${Environment}-delivery-web-client'
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs:
        - http://localhost:3000
        - https://main.d1l2ynfxs4bd2p.amplifyapp.com
      LogoutURLs:
        - http://localhost:3000
        - https://main.d1l2ynfxs4bd2p.amplifyapp.com
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      AllowedOAuthFlowsUserPoolClient: true

  # IAM Roles
  AppSyncServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AppSyncPushToCloudWatchLogs
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt OrdersTable.Arn
                  - !GetAtt DriversTable.Arn
                  - !GetAtt MerchantsTable.Arn
                  - !GetAtt CustomersTable.Arn
                  - !Sub '${OrdersTable.Arn}/index/*'
                  - !Sub '${DriversTable.Arn}/index/*'
                  - !Sub '${MerchantsTable.Arn}/index/*'
                  - !Sub '${CustomersTable.Arn}/index/*'

Outputs:
  GraphQLAPIURL:
    Description: 'GraphQL API URL'
    Value: !GetAtt DeliveryGraphQLAPI.GraphQLUrl
    Export:
      Name: !Sub '${Environment}-GraphQLAPIURL'

  GraphQLAPIId:
    Description: 'GraphQL API ID'
    Value: !GetAtt DeliveryGraphQLAPI.ApiId
    Export:
      Name: !Sub '${Environment}-GraphQLAPIId'

  UserPoolId:
    Description: 'Cognito User Pool ID'
    Value: !Ref DeliveryUserPool
    Export:
      Name: !Sub '${Environment}-UserPoolId'

  UserPoolClientId:
    Description: 'Cognito User Pool Client ID'
    Value: !Ref DeliveryUserPoolClient
    Export:
      Name: !Sub '${Environment}-UserPoolClientId'

  OrdersTableName:
    Description: 'Orders DynamoDB Table Name'
    Value: !Ref OrdersTable
    Export:
      Name: !Sub '${Environment}-OrdersTable'

  DriversTableName:
    Description: 'Drivers DynamoDB Table Name'
    Value: !Ref DriversTable
    Export:
      Name: !Sub '${Environment}-DriversTable'

  MerchantsTableName:
    Description: 'Merchants DynamoDB Table Name'
    Value: !Ref MerchantsTable
    Export:
      Name: !Sub '${Environment}-MerchantsTable'

  CustomersTableName:
    Description: 'Customers DynamoDB Table Name'
    Value: !Ref CustomersTable
    Export:
      Name: !Sub '${Environment}-CustomersTable'
